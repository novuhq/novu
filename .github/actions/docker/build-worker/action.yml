name: Build Worker Docker Image

description: 'Builds a docker image for the Worker'

inputs:
  tag:
    description: 'The tag to use for the image'
    required: false
  push:
    description: 'Push the image to the registry'
    required: false
    default: 'false'
  github_token:
    description: 'The token to use for logging into ghcr.io'
    required: true
  fork:
    description: 'Whether this is being triggered from a forked repo'
    required: false
    default: 'false'
  docker_name:
    description: 'Name for docker image'
    required: true
  environment:
    required: false
    description: 'Github Environment to get secrets from'
  bullmq_secret:
    description: 'Bullmq secret api token'
    required: true

outputs:
  image:
    description: 'The image that was built'
    value: ${{ steps.build-image.outputs.IMAGE }}

runs:
  using: composite
  steps:
    - name: ⛏️ build worker
      shell: bash
      run: pnpm build:worker

    # TODO Removed when migrated to action matrix for each build type
    - uses: ./.github/actions/free-space
    - uses: ./.github/actions/cache

    - uses: crazy-max/ghaction-setup-docker@v2
      with:
        version: v24.0.6
        daemon-config: |
          {
            "features": {
              "containerd-snapshotter": true
            }
          }

    - name: Setup QEMU
      uses: docker/setup-qemu-action@v3
      with:
        platforms: linux/amd64,linux/arm64

    - name: Set Up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        driver-opts: 'image=moby/buildkit:v0.13.1'

    - name: Prepare
      shell: bash
      run: |
        service=${{ matrix.name }}
        echo "SERVICE_NAME=$(basename "${service//-/-}")" >> $GITHUB_ENV

    - name: Login To Registry
      shell: bash
      env:
        GH_ACTOR: ${{ github.actor }}
        GH_PASSWORD: ${{ inputs.github_token }}
      run: |
        echo $GH_PASSWORD | docker login ghcr.io -u $GH_ACTOR --password-stdin

    - name: Set Bull MQ Env variable for EE
      shell: bash
      run: |
        echo "BULL_MQ_PRO_NPM_TOKEN=${{ inputs.bullmq_secret }}" >> $GITHUB_ENV
      if: contains(inputs.docker_name , 'ee')

    - name: Build with Buildx, tag, and test
      shell: bash
      env:
        REGISTRY_OWNER: novuhq
        DOCKER_NAME: ${{ inputs.docker_name }}
        IMAGE_TAG: ${{ github.sha }}
        GH_ACTOR: ${{ github.actor }}
        GH_PASSWORD: ${{ inputs.github_token }}
        DOCKER_BUILD_ARGUMENTS: >
          --cache-from type=registry,ref=ghcr.io/novuhq/cache:build-cache-${{ env.SERVICE_NAME }}-${{ inputs.environment }}
          --cache-to type=registry,ref=ghcr.io/novuhq/cache:build-cache-${{ env.SERVICE_NAME }}-${{ inputs.environment }},mode=max
          --platform=linux/amd64 --provenance=false
          --output=type=image,name=ghcr.io/novuhq/${{ inputs.docker_name }},push-by-digest=true,name-canonical=true
      run: |
        set -x
        cd apps/worker && pnpm run docker:build

    - name: Tag and test
      id: build-image
      shell: bash
      env:
        REGISTRY_OWNER: novuhq
        DOCKER_NAME: ${{ inputs.docker_name }}
        IMAGE_TAG: ${{ github.sha }}
        GH_ACTOR: ${{ github.actor }}
        GH_PASSWORD: ${{ inputs.github_token }}
      run: |
        echo "Tag image"
        docker images --all
        docker tag novu-worker ghcr.io/$REGISTRY_OWNER/$DOCKER_NAME:$IMAGE_TAG

        echo "Run image"
        docker run --network=host --name worker -dit --env NODE_ENV=test ghcr.io/$REGISTRY_OWNER/$DOCKER_NAME:$IMAGE_TAG
        docker run --network=host appropriate/curl --retry 10 --retry-delay 5 --retry-connrefused http://127.0.0.1:1342/v1/health-check | grep 'ok'

        echo "IMAGE=ghcr.io/$REGISTRY_OWNER/$DOCKER_NAME:$IMAGE_TAG" >> $GITHUB_OUTPUT

    - name: Optionally tag docker image
      if: ${{ inputs.tag }}
      shell: bash
      env:
        REGISTRY_OWNER: novuhq
        DOCKER_NAME: ${{ inputs.docker_name }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker tag ghcr.io/$REGISTRY_OWNER/$DOCKER_NAME:$IMAGE_TAG ghcr.io/$REGISTRY_OWNER/$DOCKER_NAME:${{ inputs.tag }}

    - name: Push PR tag image
      if: ${{ inputs.push == 'true' }}
      shell: bash
      env:
        REGISTRY_OWNER: novuhq
        DOCKER_NAME: ${{ inputs.docker_name }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker push ghcr.io/$REGISTRY_OWNER/$DOCKER_NAME:$IMAGE_TAG

    - name: Push custom tag image
      if: ${{ inputs.push == 'true' && inputs.tag }}
      shell: bash
      env:
        REGISTRY_OWNER: novuhq
        DOCKER_NAME: ${{ inputs.docker_name }}
      run: |
        docker push ghcr.io/$REGISTRY_OWNER/$DOCKER_NAME:${{ inputs.tag }}
