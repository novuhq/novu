{
  "folders": [
    {
      "name": "âœ¨ novu root",
      "path": "."
    },
    {
      "name": "ðŸš€ @novu/api-server",
      "path": "apps/api"
    },
    {
      "name": "ðŸš€ @novu/worker",
      "path": "apps/worker"
    },
    {
      "name": "ðŸš€ @novu/web",
      "path": "apps/web"
    },
    {
      "name": "ðŸš€ @novu/ws",
      "path": "apps/ws"
    },
    {
      "name": "ðŸš€ @novu/webhook",
      "path": "apps/webhook"
    },
    {
      "name": "ðŸš€ @novu/widget",
      "path": "apps/widget"
    },
    {
      "name": "ðŸ“¦ @novu/dal",
      "path": "libs/dal"
    },
    {
      "name": "ðŸ“¦ @novu/design-system",
      "path": "libs/design-system"
    },
    {
      "name": "ðŸ“¦ @novu/embed",
      "path": "libs/embed"
    },
    {
      "name": "ðŸ“¦ @novu/novui",
      "path": "libs/novui"
    },
    {
      "name": "ðŸ“¦ @novu/cli",
      "path": "packages/cli"
    },
    {
      "name": "ðŸ“¦ @novu/client",
      "path": "packages/client"
    },
    {
      "name": "ðŸ“¦ @novu/headless",
      "path": "packages/headless"
    },
    {
      "name": "ðŸ“¦ @novu/shared",
      "path": "libs/shared"
    },
    {
      "name": "ðŸ“¦ @novu/testing",
      "path": "libs/testing"
    },
    {
      "name": "ðŸ“¦ @novu/stateless",
      "path": "packages/stateless"
    },
    {
      "name": "ðŸ“¦ @novu/node",
      "path": "packages/node"
    },
    {
      "name": "ðŸ“¦ @novu/notification-center",
      "path": "packages/notification-center"
    },
    {
      "name": "ðŸ“¦ @novu/notification-center-vue",
      "path": "packages/notification-center-vue"
    },
    {
      "name": "ðŸ“¦ @novu/notification-center-angular",
      "path": "packages/notification-center-angular"
    },
    {
      "name": "ðŸ“¦ @novu/react-native",
      "path": "packages/react-native"
    },
    {
      "name": "ðŸ“¦ @novu/application-generic",
      "path": "packages/application-generic"
    },
  ],
  "settings": {
    "typescript.tsdk": "node_modules/typescript/lib",
    "typescript.enablePromptUseWorkspaceTsdk": true,
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.formatOnSave": true,
    "editor.formatOnPaste": true,
    "cSpell.words": [
      "Chainable",
      "usecases"
    ],
    "vsicons.presets.nestjs": true
  },
  "extensions": {
    "recommendations": [
      "folke.vscode-monorepo-workspace",
      "seatonjiang.gitmoji-vscode",
      "jondot.vscode-hygen",
      "esbenp.prettier-vscode",
      "dbaeumer.vscode-eslint"
    ]
  }
}
